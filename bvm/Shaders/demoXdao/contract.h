#pragma once

namespace DemoXdao
{
    // prev versions, deployed on masternet under 'upgradable' contract
    static const ShaderID s_SID_0 = { 0x43,0x5f,0x96,0x42,0xf9,0xf0,0x1d,0xa6,0x24,0xe1,0x77,0xd4,0x23,0x2b,0xea,0x2c,0x71,0xa2,0xb9,0x58,0x0a,0x97,0x6b,0x17,0x33,0xb6,0x6b,0x71,0xe9,0xea,0x5c,0xd7 };
    static const ShaderID s_SID_1 = { 0x37,0x07,0xa0,0x37,0x53,0xe5,0x19,0x79,0xfe,0xc8,0x53,0x9a,0x85,0x0f,0x0d,0x7c,0x98,0x95,0xde,0x57,0x3b,0x84,0xf8,0x22,0x10,0x2b,0xb6,0x08,0x84,0x94,0x27,0x9a };

    // current version
    static const ShaderID s_SID = { 0xc8,0xd9,0x7b,0xe0,0x99,0x77,0xb9,0x30,0xa8,0x88,0x1c,0x3c,0xb6,0xc8,0x7a,0x6b,0x62,0x07,0x2a,0x71,0xfa,0x34,0xf9,0x67,0x49,0x6b,0xbb,0x0d,0x0c,0xa1,0x62,0xfe };

#pragma pack (push, 1)


    struct State
    {
        AssetID m_Aid;

        static const Amount s_TotalEmission = g_Beam2Groth * 10000;
        static const Amount s_ReleasePerLock = g_Beam2Groth * 10;
    };

    struct LockAndGet
    {
        static const uint32_t s_iMethod = 3; // used to map to class methods to TX kernel. In the class implementation we expect to see Method_2

        static const Amount s_MinLockAmount = g_Beam2Groth * 2;

        PubKey m_Pk;
        Amount m_Amount;
    };

#pragma pack (pop)

}
